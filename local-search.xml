<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>一些小技巧</title>
    <link href="/2024/04/16/some-problems/"/>
    <url>/2024/04/16/some-problems/</url>
    
    <content type="html"><![CDATA[<h1>Fluid 魔改</h1><ul><li><div align = 'center'><a class="btn" href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97"  title="Manual of Fluid" target="_blank">Manual</a></div></li><li><div align = 'center'><a class="btn" href="https://blog.kevinchu.top/2023/07/17/hexo-theme-fluid-modify/"  target="_blank">KEVIN'S BLOG</a><a class="btn" href="https://qingshaner.com/Hexo%20Fluid%E4%B8%BB%E9%A2%98%E8%83%8C%E6%99%AF%E5%9B%BA%E5%AE%9A(ES6%E6%94%B9%E5%86%99%E7%89%88)%E4%B8%8E%E6%AF%9B%E7%8E%BB%E7%92%83%E5%BA%95%E9%A1%B5/"  target="_blank">毛玻璃效果</a><a class="btn" href="https://asteri5m.gitee.io/archives/Fluid%E9%AD%94%E6%94%B9%E7%AC%94%E8%AE%B0.html"  target="_blank">Asteri5m'S BLOG</a>`</div>`</li></ul><div class="note note-warning">            <p>为了在主题更换中，更好的管理custom的js &amp; css，在source目录下创建自己的 <code>custom</code>文件夹。<br>在其中写入自定义的js和css或者styl文件，然后再主题配置中分别引入。</p>          </div><div align="center"><img src="/img/some-problems/1713324420724.png" style="max-height:250px; width:auto;"></div><h2 id="目录">目录</h2><h4 id="Javascript">Javascript</h4><ol><li><a href="#%E6%81%B6%E6%90%9E%E6%A0%87%E9%A2%98">恶搞标题</a></li><li><a href="#%E5%8A%A8%E6%80%81%E7%BA%BF%E6%9D%A1">动态线条</a></li></ol><h4 id="CSS">CSS</h4><ol><li><a href="#mac%E9%A3%8E%E6%A0%BC%E4%BB%A3%E7%A0%81%E5%9D%97">Mac风格代码块</a></li><li><a href="#%E8%83%8C%E6%99%AF%E5%85%A8%E5%B1%8F">背景全屏</a></li><li><a href="#%E6%AF%9B%E7%8E%BB%E7%92%83%E6%95%88%E6%9E%9C">毛玻璃效果</a></li><li><a href="#%E5%AF%BC%E8%88%AA%E6%A0%8F%E6%A0%87%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9C%93%E8%99%B9%E7%81%AF%E7%89%B9%E6%95%88">导航栏标题添加霓虹灯特效</a></li></ol><h2 id="Javascript-2">Javascript</h2><h3 id="恶搞标题">恶搞标题</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 浏览器搞笑标题</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">OriginTitle</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span>;<br><span class="hljs-keyword">var</span> titleTime;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;visibilitychange&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">hidden</span>) &#123;<br>$(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&quot;/funny.ico&quot;</span>);<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;👀页面崩溃啦 ~&#x27;</span>;<br><span class="hljs-built_in">clearTimeout</span>(titleTime);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>$(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&quot;/img/newtubiao.png&quot;</span>);<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;👻 噫又好啦 ~&#x27;</span> + <span class="hljs-title class_">OriginTitle</span>;<br>titleTime = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-title class_">OriginTitle</span>;<br>&#125;, <span class="hljs-number">2000</span>);<br>&#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="动态线条">动态线条</h3><p>无法根绝主题模式的切换而变换线条颜色（light：黑色，dark：白色），刷新页面即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 动态线条</span><br><span class="hljs-keyword">var</span> color_dark = <span class="hljs-string">&quot;255,255,255&quot;</span>; <span class="hljs-keyword">var</span> color_light = <span class="hljs-string">&quot;0,0,0&quot;</span>; <span class="hljs-keyword">var</span> opacity = <span class="hljs-string">&#x27;0.8&#x27;</span>; <span class="hljs-keyword">var</span> zIndex = <span class="hljs-string">&quot;-2&quot;</span>; <span class="hljs-keyword">var</span> count = <span class="hljs-string">&quot;200&quot;</span>; <span class="hljs-keyword">var</span> <span class="hljs-title class_">Line</span>_act = <span class="hljs-keyword">function</span> (<span class="hljs-params">color</span>) &#123; <span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params">w, v, i</span>) &#123; <span class="hljs-keyword">return</span> w.<span class="hljs-title function_">getAttribute</span>(v) || i &#125; <span class="hljs-keyword">function</span> <span class="hljs-title function_">j</span>(<span class="hljs-params">i</span>) &#123; <span class="hljs-keyword">return</span> <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(i) &#125; <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-keyword">var</span> i = <span class="hljs-title function_">j</span>(<span class="hljs-string">&quot;script&quot;</span>), w = i.<span class="hljs-property">length</span>, v = i[w - <span class="hljs-number">1</span>]; <span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">l</span>: w, <span class="hljs-attr">z</span>: <span class="hljs-title function_">o</span>(v, <span class="hljs-string">&quot;zIndex&quot;</span>, -<span class="hljs-number">1</span>), <span class="hljs-attr">o</span>: <span class="hljs-title function_">o</span>(v, <span class="hljs-string">&quot;opacity&quot;</span>, <span class="hljs-number">0.8</span>), <span class="hljs-attr">c</span>: <span class="hljs-title function_">o</span>(v, <span class="hljs-string">&quot;color&quot;</span>, color), <span class="hljs-attr">n</span>: <span class="hljs-title function_">o</span>(v, <span class="hljs-string">&quot;count&quot;</span>, <span class="hljs-number">100</span>) &#125; &#125; <span class="hljs-keyword">function</span> <span class="hljs-title function_">k</span>(<span class="hljs-params"></span>) &#123; r = u.<span class="hljs-property">width</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>, n = u.<span class="hljs-property">height</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientHeight</span> &#125; <span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params"></span>) &#123; e.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, r, n); <span class="hljs-keyword">var</span> w = [f].<span class="hljs-title function_">concat</span>(t); <span class="hljs-keyword">var</span> x, v, A, B, z, y; t.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">i</span>) &#123; i.<span class="hljs-property">x</span> += i.<span class="hljs-property">xa</span>, i.<span class="hljs-property">y</span> += i.<span class="hljs-property">ya</span>, i.<span class="hljs-property">xa</span> *= i.<span class="hljs-property">x</span> &gt; r || i.<span class="hljs-property">x</span> &lt; <span class="hljs-number">0</span> ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>, i.<span class="hljs-property">ya</span> *= i.<span class="hljs-property">y</span> &gt; n || i.<span class="hljs-property">y</span> &lt; <span class="hljs-number">0</span> ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>, e.<span class="hljs-title function_">fillRect</span>(i.<span class="hljs-property">x</span> - <span class="hljs-number">0.5</span>, i.<span class="hljs-property">y</span> - <span class="hljs-number">0.5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>); <span class="hljs-keyword">for</span> (v = <span class="hljs-number">0</span>; v &lt; w.<span class="hljs-property">length</span>; v++) &#123; x = w[v]; <span class="hljs-keyword">if</span> (i !== x &amp;&amp; <span class="hljs-literal">null</span> !== x.<span class="hljs-property">x</span> &amp;&amp; <span class="hljs-literal">null</span> !== x.<span class="hljs-property">y</span>) &#123; B = i.<span class="hljs-property">x</span> - x.<span class="hljs-property">x</span>, z = i.<span class="hljs-property">y</span> - x.<span class="hljs-property">y</span>, y = B * B + z * z; y &lt; x.<span class="hljs-property">max</span> &amp;&amp; (x === f &amp;&amp; y &gt;= x.<span class="hljs-property">max</span> / <span class="hljs-number">2</span> &amp;&amp; (i.<span class="hljs-property">x</span> -= <span class="hljs-number">0.03</span> * B, i.<span class="hljs-property">y</span> -= <span class="hljs-number">0.03</span> * z), A = (x.<span class="hljs-property">max</span> - y) / x.<span class="hljs-property">max</span>, e.<span class="hljs-title function_">beginPath</span>(), e.<span class="hljs-property">lineWidth</span> = A / <span class="hljs-number">2</span>, e.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&quot;rgba(&quot;</span> + s.<span class="hljs-property">c</span> + <span class="hljs-string">&quot;,&quot;</span> + (A + <span class="hljs-number">0.2</span>) + <span class="hljs-string">&quot;)&quot;</span>, e.<span class="hljs-title function_">moveTo</span>(i.<span class="hljs-property">x</span>, i.<span class="hljs-property">y</span>), e.<span class="hljs-title function_">lineTo</span>(x.<span class="hljs-property">x</span>, x.<span class="hljs-property">y</span>), e.<span class="hljs-title function_">stroke</span>()) &#125; &#125; w.<span class="hljs-title function_">splice</span>(w.<span class="hljs-title function_">indexOf</span>(i), <span class="hljs-number">1</span>) &#125;), <span class="hljs-title function_">m</span>(b) &#125; <span class="hljs-keyword">var</span> u = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;canvas&quot;</span>), s = <span class="hljs-title function_">l</span>(), c = <span class="hljs-string">&quot;c_n&quot;</span> + s.<span class="hljs-property">l</span>, e = u.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>), r, n, m = <span class="hljs-variable language_">window</span>.<span class="hljs-property">requestAnimationFrame</span> || <span class="hljs-variable language_">window</span>.<span class="hljs-property">webkitRequestAnimationFrame</span> || <span class="hljs-variable language_">window</span>.<span class="hljs-property">mozRequestAnimationFrame</span> || <span class="hljs-variable language_">window</span>.<span class="hljs-property">oRequestAnimationFrame</span> || <span class="hljs-variable language_">window</span>.<span class="hljs-property">msRequestAnimationFrame</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">i</span>) &#123; <span class="hljs-variable language_">window</span>.<span class="hljs-built_in">setTimeout</span>(i, <span class="hljs-number">1000</span> / <span class="hljs-number">45</span>) &#125;, a = <span class="hljs-title class_">Math</span>.<span class="hljs-property">random</span>, f = &#123; <span class="hljs-attr">x</span>: <span class="hljs-literal">null</span>, <span class="hljs-attr">y</span>: <span class="hljs-literal">null</span>, <span class="hljs-attr">max</span>: <span class="hljs-number">20000</span> &#125;; u.<span class="hljs-property">id</span> = c; u.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span> = <span class="hljs-string">&quot;position:fixed;top:0;left:0;z-index:&quot;</span> + s.<span class="hljs-property">z</span> + <span class="hljs-string">&quot;;opacity:&quot;</span> + s.<span class="hljs-property">o</span>; <span class="hljs-title function_">j</span>(<span class="hljs-string">&quot;body&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">appendChild</span>(u); <span class="hljs-title function_">k</span>(), <span class="hljs-variable language_">window</span>.<span class="hljs-property">onresize</span> = k; <span class="hljs-variable language_">window</span>.<span class="hljs-property">onmousemove</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">i</span>) &#123; i = i || <span class="hljs-variable language_">window</span>.<span class="hljs-property">event</span>, f.<span class="hljs-property">x</span> = i.<span class="hljs-property">clientX</span>, f.<span class="hljs-property">y</span> = i.<span class="hljs-property">clientY</span> &#125;, <span class="hljs-variable language_">window</span>.<span class="hljs-property">onmouseout</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123; f.<span class="hljs-property">x</span> = <span class="hljs-literal">null</span>, f.<span class="hljs-property">y</span> = <span class="hljs-literal">null</span> &#125;; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = [], p = <span class="hljs-number">0</span>; s.<span class="hljs-property">n</span> &gt; p; p++) &#123; <span class="hljs-keyword">var</span> h = <span class="hljs-title function_">a</span>() * r, g = <span class="hljs-title function_">a</span>() * n, q = <span class="hljs-number">2</span> * <span class="hljs-title function_">a</span>() - <span class="hljs-number">1</span>, d = <span class="hljs-number">2</span> * <span class="hljs-title function_">a</span>() - <span class="hljs-number">1</span>; t.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">x</span>: h, <span class="hljs-attr">y</span>: g, <span class="hljs-attr">xa</span>: q, <span class="hljs-attr">ya</span>: d, <span class="hljs-attr">max</span>: <span class="hljs-number">6000</span> &#125;) &#125; <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123; <span class="hljs-title function_">b</span>() &#125;, <span class="hljs-number">100</span>) &#125;;  <span class="hljs-comment">/* 以下是我自己改的，将上述函数改为声明，在下面选择调用 */</span> <span class="hljs-keyword">var</span> lord = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;color-toggle-icon&quot;</span>).<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;data&#x27;</span>); <span class="hljs-keyword">if</span> (lord == <span class="hljs-string">&quot;light&quot;</span>) &#123; <span class="hljs-title class_">Line</span>_act(color_dark); &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-title class_">Line</span>_act(color_light); &#125;<br></code></pre></td></tr></table></figure><h2 id="CSS-2">CSS</h2><h3 id="Mac风格代码块">Mac风格代码块</h3><p>注意文件后缀 <code>styl</code></p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs styl"><span class="hljs-selector-class">.highlight</span><br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#21252b</span><br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span><br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-number">30px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">4</span>)<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">30px</span><br><br>    <span class="hljs-selector-pseudo">&amp;::before</span><br>      <span class="hljs-attribute">background</span>: <span class="hljs-number">#fc625d</span><br>      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span><br>      <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">#fdbc40</span>, <span class="hljs-number">40px</span> <span class="hljs-number">0</span> <span class="hljs-number">#35cd4b</span><br>      <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27; &#x27;</span><br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">12px</span><br>      <span class="hljs-attribute">left</span>: <span class="hljs-number">12px</span><br>      <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">20px</span><br>      <span class="hljs-attribute">position</span>: absolute<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">12px</span><br></code></pre></td></tr></table></figure><h3 id="背景全屏">背景全屏</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 设置背景图片 */</span><br><span class="hljs-selector-tag">body</span> &#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/bg/wallhaven-kxv9rd_2560x1440.png</span>);<br>    <span class="hljs-attribute">background-attachment</span>: fixed;<br>    <span class="hljs-attribute">background-size</span>: cover;  <br>  &#125;<br></code></pre></td></tr></table></figure><h3 id="毛玻璃效果">毛玻璃效果</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 文章页背景 */</span><br><span class="hljs-selector-id">#board</span> &#123;<br>  -webkit-backdrop-<span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">6px</span>); <span class="hljs-comment">/* 数字为模糊程度，越高，越不清晰 */</span><br>  backdrop-<span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">6px</span>);<br>&#125;<br><br><span class="hljs-comment">/* 侧边栏（目录）颜色设置。根据背景图片进行调整，我的背景太白导致字体不清晰 */</span><br><span class="hljs-selector-class">.sidebar</span> &#123;<br>  <span class="hljs-attribute">color</span>: black; <span class="hljs-comment">/* 设置侧边栏中的文本颜色为黑色 */</span><br>&#125;<br><span class="hljs-selector-class">.sidebar</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: black; <span class="hljs-comment">/* 设置侧边栏中所有链接的颜色为黑色 */</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="导航栏标题添加霓虹灯特效">导航栏标题添加霓虹灯特效</h3><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs styl"><span class="hljs-selector-class">.navbar-title</span><br>  <span class="hljs-attribute">outline</span> none<br>  <span class="hljs-attr">--c</span> lightseagreen<br>  <span class="hljs-attribute">text-shadow</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-built_in">var</span>(--c),<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-built_in">var</span>(--c),<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">40px</span> <span class="hljs-built_in">var</span>(--c),<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">80px</span> <span class="hljs-built_in">var</span>(--c),<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">160px</span> <span class="hljs-built_in">var</span>(--c)<br>  <span class="hljs-attribute">animation</span> animate <span class="hljs-number">5s</span> linear infinite<br><br><span class="hljs-keyword">@keyframes</span> animate&#123;<br>  to&#123;<br>      <span class="hljs-attribute">filter</span>: <span class="hljs-built_in">hue-rotate</span>(<span class="hljs-number">360deg</span>)<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>To be Conninud…<br>记录自己所有魔改…</p>          </div>]]></content>
    
    
    <categories>
      
      <category>Tips</category>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CA-Midterm_1-Review</title>
    <link href="/2024/04/12/CA-Midterm-1-Review/"/>
    <url>/2024/04/12/CA-Midterm-1-Review/</url>
    
    <content type="html"><![CDATA[<h1>Midterm_1 Review</h1><h1>OverAll</h1><div align="center"><a class="btn" href="https://toast-lab.sist.shanghaitech.edu.cn/courses/CS110@ShanghaiTech/Spring-2024/index.html"  title="CS110 Spring 2024" target="_blank">Course page</a></div><h2 id="Floating-point-number">Floating point number</h2><div align="center"><img src="/img/CA-Midterm-1-Review/1712645138443.png" style="max-height:250px; width:auto;"></div><p>$$<br>\begin{align}<br>&amp;S = (-1)^{\text{Sign}}\\<br>&amp;E = \text{Exponent}_2-127_{10}\\<br>&amp;Value = S\times M\times2^E<br>\end{align}<br>$$</p><div align="center"><img src="/img/CA-Midterm-1-Review/1712645707931.png" style="max-height:250px; width:auto;"><figcaption>Summary</figcaption></div><div class="note note-warning">            <p><strong>Tips</strong>:<br>Abt denorms: Normalization and hidden 1 is to blame!<br>The exponent of denorms: $E := -126$</p>          </div><h2 id="How-C-works">How C works?</h2><h3 id="C-Compilation-Simplified-Overview">C Compilation Simplified Overview</h3><ul><li>Generally a two part process of compiling <code>.c</code> files to <code>.o</code> files, then linking the <code>.o</code> files into executables;</li><li>Assembling is also done (but is hidden, i.e., done automatically, by default);</li></ul><div align="center"><img src="/img/CA-Midterm-1-Review/1712647862392.png" style="max-height:450px; width:auto;"></div><p><strong>E.G</strong></p><div align="center""><img src="/img/CA-Midterm-1-Review/1712657012853.png" style="max-height: 450px; width:auto;"><figcaption>Something abt macro constant</figcaption></div><div class="note note-success">            <p>PI: no type.</p>          </div><h3 id="Pointer">Pointer</h3><p>Just remember to initialize it, or it can point to “garbage”.</p><h3 id="Array">Array</h3><p>The difference between <code>char string1[] = &quot;abc&quot;</code> , <code>char string2[3] = &quot;abc&quot;  </code>and <code>char *string3 = &quot;abc&quot;</code>.</p><div align="center">    <img src="/img/CA-Midterm-1-Review/1712658756754.png" style="max-height:300px; width:auto;">    <img src="/img/CA-Midterm-1-Review/1712658781716.png" style="max-height:300px; width:auto;">    <figcaption>string1 ends with '\0', string3 is only readable</figcaption></div><h4 id="Further-explanations">Further explanations:</h4><ul><li><p><strong>What do these below mean? Be really careful!</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> arr[] = [ <span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>] ; <br><span class="hljs-type">int</span> *p = arr;  <br><span class="hljs-type">int</span> (*p1)[<span class="hljs-number">5</span>] = &amp;arr;  <span class="hljs-comment">// p is a pointer, including 5 int elements, refering to arr.</span><br><span class="hljs-type">int</span> *p2[<span class="hljs-number">5</span>];<span class="hljs-comment">// p2 is an array, including 5 int pointer.</span><br><span class="hljs-type">int</span> (*p)(<span class="hljs-type">void</span>);<span class="hljs-comment">// p is a pointer pointing to a function which accepts nothing.</span><br><span class="hljs-type">int</span> (*func arr[<span class="hljs-number">5</span>])(<span class="hljs-type">float</span> x);      <span class="hljs-comment">// func_arr is an array, including 5 function pointers, and they all accept float.</span><br></code></pre></td></tr></table></figure></li><li><p><strong>Be carefull abt pointer in function</strong></p><table><thead><tr><th><code>void inc_ptr(int *p) &#123; p = p + 1; &#125;</code></th><th><code>void inc_ptr(int **h)&#123; *h = *h + 1; &#125;</code></th></tr></thead><tbody><tr><td><code>int A[3] = &#123;50, 60, 70&#125;;</code></td><td><code>int A[3] = &#123;50, 60, 70&#125;;</code></td></tr><tr><td><code>int *q = A;</code></td><td><code>int *q = A;</code></td></tr><tr><td><code>inc_ptr( q);</code></td><td><code>inc_ptr(&amp;q);</code></td></tr><tr><td><code>printf( &quot;q = %d\n&quot;,*q)</code></td><td><code>printf( &quot;q = %d\n&quot;,*q)</code></td></tr></tbody></table></li></ul><div class="note note-success">            <ol><li>q = 50</li><li>q = 60</li></ol>          </div><h4 id="Point-past-end-of-array">Point past end of array</h4><ul><li>Array size n; want to access from 0 to n-1, but test for exit by comparing to address one element past the last member of the array.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> ar[<span class="hljs-number">10</span>]=&#123;&#125;,*p, *q, sum=<span class="hljs-number">0</span>;<br>p = &amp;ar[<span class="hljs-number">0</span>]; q = &amp;ar[<span class="hljs-number">10</span>];<br><span class="hljs-keyword">while</span> (p!=q) <span class="hljs-comment">/* sum = sum+*p; p = p+1*/</span> <br>sum += *p++<br></code></pre></td></tr></table></figure><ul><li>C defines that one element past <strong>end of array must be a valid address</strong>, i.e., <code>&lt;span style=&quot;font-weight: bold; color: red;&quot;&gt;</code>not causing an error</li></ul><h2 id="C-Memory-Managemen">C Memory Managemen</h2><img align="right" src="/img/CA-Midterm-1-Review/1712563732459.png" style="max-height:200px; width:auto;"><ul><li><strong>Stack:</strong> automatically resize itself upon function invocations. (StackOverflow)</li><li><strong>Heap:</strong> this part is used for dynamic memory allocation. (malloc, free)</li><li><strong>Static Data:</strong> Global and static variables, allocated in compile time.</li><li><strong>Code:</strong> Contains code of the program, immutable. Also called text segment.</li></ul><h3 id="Where-are-Variables-Allocated">Where are Variables Allocated?</h3><ul><li><p>If declared outside a function, <code>&lt;span style=&quot;font-weight: bold; color: red;&quot;&gt;</code>allocated in static storage</p></li><li><p>If declared inside function,<code>&lt;span style=&quot;font-weight: bold; color: red;&quot;&gt;</code> allocated on the stack  and freed when function returns</p><ul><li>main() is treated like a function</li></ul></li><li><p>For the above two types, the memory management is automatic</p><ul><li>Don’t need to deallocating when no longer using them</li><li>A variable does not exist anymore once a function ends!</li></ul></li></ul><h2 id="RISC-V">RISC-V</h2><p>Seek for more details: <a href="%5Cimg%5CCA-Midterm-1-Review%5Criscvcard.pdf">RISC-V Green_card</a></p><h2 id="Combinatorial-Logic">Combinatorial Logic</h2><ul><li>Be careful:<div class="note note-danger">            <p>$$<br>\begin{equation}<br>\begin{gathered}<br>A = A + A\overline{D}\\<br>\text{DeMorgan’s Law: } \overline{AB} = \overline{A} + \overline{B}, \overline{A+B} =  \overline{A}\ \overline{B}<br>\end{gathered}<br>\end{equation}<br>$$</p>          </div></li></ul><h2 id="4-Sequence-Logic">4. Sequence Logic</h2><ul><li>Some terminology:<ul><li><strong>Clk-to-q:</strong> (t_prop) is the time for a signal to propagate through a flip-flop.</li><li><strong>Propagation delay:</strong> (t_combinational) is the longest delay for any combinational logic (which by definition is surrounded by two flip-flop)</li><li><strong>Setup time:</strong> (t_setup) is the time before the rising clock edge that the input to a flip-flop must be valid.</li><li><strong>Hold time:</strong> The minimum time during which the input must be valid after the clock edge</li></ul></li></ul><div align="center"><img src="/img/CA-Midterm-1-Review/1712566491323.png" style="max-height:200px; width:auto;"></div><div align="center">    <img src="/img/CA-Midterm-1-Review/1712579855004.jpg" style="max-height:300px; width:auto;">    <img src="/img/CA-Midterm-1-Review/1712580603850.png" style="max-height:300px; width:auto;"></div><div class="note note-info">            <p>Therefore, to be more SPECIFIC:</p><p><strong>Clk-to-q:</strong> when there is a rising edge, output propagate this time.<br><strong>Setup time &amp; Hold time</strong>, during which the input should be stable.<br><strong>Also note that:</strong><br>Combinatorial logic also has delays.</p>          </div><p><strong>(Setup time violation)</strong> In a SDS, a system the clock period (or cycle time) must be at least as large as</p><p>$$<br>\begin{equation}<br>\begin{gathered}<br>t_{\text{prop}}(t_{\text{clk-to-q}})+t_{\text{combinational}}+t_{\text{setup}}\leq \text{min clock period}\\<br>\text{Max frequency = 1/min clock period}<br>\end{gathered}<br>\end{equation}<br>$$</p><p>(Hold time violation) In a feedback SDS(circuits contain register to register propagation), the hold time must not exceed:</p><p>$$<br>\text{hold time}\leq t_{\text{prop}}(t_{\text{clk-to-q}})+t_{\text{combinational}}<br>$$</p><p><strong>E.G</strong></p><div align="center"><img src="/img/CA-Midterm-1-Review/1712642904789.png" style="max-height:200px; width:auto;"><figcaption>Example of Setup & Hold time</figcaption></div><div class="note note-success">            <p>Solution:</p><p><strong>Setup time</strong>: the critical path of “outer” combinational circuit.<br><strong>Hold time</strong>: The shortest path including self register.<br><strong>ATT:</strong> Evaluate each register separately</p>          </div><div align="center">    <img src="/img/CA-Midterm-1-Review/1712643481109.jpg" style="max-height:200px; width:auto;">    <img src="/img/CA-Midterm-1-Review/1712643484417.jpg" style="max-height:200px; width:auto;">    <figcaption>Example of Setup & Hold time</figcaption></div>]]></content>
    
    
    <categories>
      
      <category>CA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CA</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
